// Code generated by github.com/kasaikou/goacc, DO NOT EDIT.
// defaultTag=-
package tests

import "encoding/json"

type SampleBuilder interface {
	SetPiyo(piyo int) SampleBuilder
	SetHoge(hoge string) SampleBuilder
	Build() *Sample
}

// sampleBuilderImpl is an instance for generating an instance of Sample.
type sampleBuilderImpl struct {
	__s *Sample
}

// NewSampleBuilder creates an SampleBuilder instance.
func NewSampleBuilder(
	name string,
) SampleBuilder {
	__s := &Sample{}

	__s.name = name

	return &sampleBuilderImpl{__s: __s}
}

func (__sb *sampleBuilderImpl) SetPiyo(piyo int) SampleBuilder {
	if __sb == nil {
		panic("sampleBuilderImpl is nil")
	} else if __sb.__s != nil {
		__sb.__s.piyo = piyo
		return __sb
	}

	panic("Sample has been already purged")
}

func (__sb *sampleBuilderImpl) SetHoge(hoge string) SampleBuilder {
	if __sb == nil {
		panic("sampleBuilderImpl is nil")
	} else if __sb.__s != nil {
		__sb.__s.hoge = hoge
		return __sb
	}

	panic("Sample has been already purged")
}

// Build purges Sample instance from sampleBuilderImpl.
//
// If calls other method in sampleBuilderImpl after Purge called, it will be panic.
func (__sb *sampleBuilderImpl) Build() *Sample {
	if __sb == nil {
		panic("sampleBuilderImpl is nil")
	} else if __sb.__s != nil {
		__s := __sb.__s
		__sb.__s = nil

		return __s
	}

	panic("Sample has been already purged")
}

func (__s *Sample) Name() string {
	if __s != nil {
		return __s.name
	}

	panic("Sample is nil")
}

func (__s *Sample) Piyo() int {
	if __s != nil {
		return __s.piyo
	}

	panic("Sample is nil")
}

func (__s *Sample) Hoge() string {
	if __s != nil {
		return __s.hoge
	}

	panic("Sample is nil")
}

func (__s *Sample) SetHoge(hoge string) {
	if __s != nil {
		__s.hoge = hoge
	}
}

func (__s *Sample) MarshalJSON() ([]byte, error) {

	type SampleJSONContent struct {
		Name string `json:"name"`
		Piyo int    `json:"piyo,omitempty"`
	}

	return json.Marshal(SampleJSONContent{
		Name: __s.name,
		Piyo: __s.piyo,
	})
}
