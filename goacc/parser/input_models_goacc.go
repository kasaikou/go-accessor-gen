// Code generated by github.com/kasaikou/goacc, DO NOT EDIT.
package parser

import (
	"encoding/json"

	"golang.org/x/tools/go/packages"
)

// LoadPackageInputBuilder is an instance for generating an instance of LoadPackageInput.
type LoadPackageInputBuilder struct {
	__lpi *LoadPackageInput
}

// NewLoadPackageInputBuilder creates an LoadPackageInputBuilder instance.
func NewLoadPackageInputBuilder(
	dirname string,
) *LoadPackageInputBuilder {
	__lpi := &LoadPackageInput{}

	__lpi.dirname = dirname

	return &LoadPackageInputBuilder{__lpi: __lpi}
}

// Purge purges LoadPackageInput instance from LoadPackageInputBuilder.
//
// If calls other method in LoadPackageInputBuilder after Purge called, it will be panic.
func (__lpib *LoadPackageInputBuilder) Purge() *LoadPackageInput {
	if __lpib == nil {
		panic("LoadPackageInputBuilder is nil")
	} else if __lpib.__lpi != nil {
		__lpi := __lpib.__lpi
		__lpib.__lpi = nil

		return __lpi
	}

	panic("LoadPackageInput has been already purged")
}

func (__lpi *LoadPackageInput) MarshalJSON() ([]byte, error) {

	type LoadPackageInputJSONContent struct {
		Dirname string `json:"dirname"`
	}

	return json.Marshal(LoadPackageInputJSONContent{
		Dirname: __lpi.dirname,
	})
}

// ParsePackageInputBuilder is an instance for generating an instance of ParsePackageInput.
type ParsePackageInputBuilder struct {
	__ppi *ParsePackageInput
}

// NewParsePackageInputBuilder creates an ParsePackageInputBuilder instance.
func NewParsePackageInputBuilder(
	pkg *packages.Package,
	defaultTag string,
) *ParsePackageInputBuilder {
	__ppi := &ParsePackageInput{}

	__ppi.pkg = pkg
	__ppi.defaultTag = defaultTag

	return &ParsePackageInputBuilder{__ppi: __ppi}
}

// Purge purges ParsePackageInput instance from ParsePackageInputBuilder.
//
// If calls other method in ParsePackageInputBuilder after Purge called, it will be panic.
func (__ppib *ParsePackageInputBuilder) Purge() *ParsePackageInput {
	if __ppib == nil {
		panic("ParsePackageInputBuilder is nil")
	} else if __ppib.__ppi != nil {
		__ppi := __ppib.__ppi
		__ppib.__ppi = nil

		return __ppi
	}

	panic("ParsePackageInput has been already purged")
}

func (__ppi *ParsePackageInput) MarshalJSON() ([]byte, error) {

	type ParsePackageInputJSONContent struct {
		DefaultTag string `json:"defaultTag"`
	}

	return json.Marshal(ParsePackageInputJSONContent{
		DefaultTag: __ppi.defaultTag,
	})
}
