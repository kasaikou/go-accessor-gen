// Code generated by github.com/kasaikou/goacc, DO NOT EDIT.
package entity

import "encoding/json"

// GenerateConfigBuilder is an instance for generating an instance of GenerateConfig.
type GenerateConfigBuilder struct {
	__gc *GenerateConfig
}

// NewGenerateConfigBuilder creates an GenerateConfigBuilder instance.
func NewGenerateConfigBuilder(
	includePattern string,
	defaultLabel string,
) *GenerateConfigBuilder {
	__gc := &GenerateConfig{}

	__gc.goaccPreNewHook() // This function calls your defined hook.

	__gc.includePattern = includePattern
	__gc.defaultLabel = defaultLabel

	return &GenerateConfigBuilder{__gc: __gc}
}

// Purge purges GenerateConfig instance from GenerateConfigBuilder.
//
// If calls other method in GenerateConfigBuilder after Purge called, it will be panic.
func (__gcb *GenerateConfigBuilder) Purge() *GenerateConfig {
	if __gcb == nil {
		panic("GenerateConfigBuilder is nil")
	} else if __gcb.__gc != nil {
		__gc := __gcb.__gc
		__gcb.__gc = nil

		return __gc
	}

	panic("GenerateConfig has been already purged")
}

func (__gc *GenerateConfig) IncludePattern() string {
	if __gc != nil {
		return __gc.includePattern
	}

	panic("GenerateConfig is nil")
}

func (__gc *GenerateConfig) DefaultLabel() string {
	if __gc != nil {
		return __gc.defaultLabel
	}

	panic("GenerateConfig is nil")
}

func (__gc *GenerateConfig) MarshalJSON() ([]byte, error) {

	type GenerateConfigJSONContent struct {
		IncludePattern string `json:"includePattern"`
		DefaultLabel   string `json:"defaultLabel"`
	}

	return json.Marshal(GenerateConfigJSONContent{
		IncludePattern: __gc.includePattern,
		DefaultLabel:   __gc.defaultLabel,
	})
}
