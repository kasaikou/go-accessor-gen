// Code generated by github.com/kasaikou/goacc, DO NOT EDIT.
// defaultTag=-
package entity

import "encoding/json"

type GenerateConfigBuilder interface {
	Build() *GenerateConfig
}

// generateConfigBuilderImpl is an instance for generating an instance of GenerateConfig.
type generateConfigBuilderImpl struct {
	__gc *GenerateConfig
}

// NewGenerateConfigBuilder creates an GenerateConfigBuilder instance.
func NewGenerateConfigBuilder(
	workingDir string,
	includePattern string,
	defaultTag string,
) GenerateConfigBuilder {
	__gc := &GenerateConfig{}

	__gc.goaccPreNewHook() // This function calls your defined hook.

	__gc.workingDir = workingDir
	__gc.includePattern = includePattern
	__gc.defaultTag = defaultTag

	return &generateConfigBuilderImpl{__gc: __gc}
}

// Build purges GenerateConfig instance from generateConfigBuilderImpl.
//
// If calls other method in generateConfigBuilderImpl after Purge called, it will be panic.
func (__gcb *generateConfigBuilderImpl) Build() *GenerateConfig {
	if __gcb == nil {
		panic("generateConfigBuilderImpl is nil")
	} else if __gcb.__gc != nil {
		__gc := __gcb.__gc
		__gcb.__gc = nil

		return __gc
	}

	panic("GenerateConfig has been already purged")
}

func (__gc *GenerateConfig) WorkingDir() string {
	if __gc != nil {
		return __gc.workingDir
	}

	panic("GenerateConfig is nil")
}

func (__gc *GenerateConfig) IncludePattern() string {
	if __gc != nil {
		return __gc.includePattern
	}

	panic("GenerateConfig is nil")
}

func (__gc *GenerateConfig) DefaultTag() string {
	if __gc != nil {
		return __gc.defaultTag
	}

	panic("GenerateConfig is nil")
}

func (__gc *GenerateConfig) MarshalJSON() ([]byte, error) {

	type GenerateConfigJSONContent struct {
		WorkingDir     string `json:"workingDir"`
		IncludePattern string `json:"includePattern"`
		DefaultTag     string `json:"defaultTag"`
	}

	return json.Marshal(GenerateConfigJSONContent{
		WorkingDir:     __gc.workingDir,
		IncludePattern: __gc.includePattern,
		DefaultTag:     __gc.defaultTag,
	})
}
