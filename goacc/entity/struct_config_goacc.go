// Code generated by github.com/kasaikou/goacc, DO NOT EDIT.
// defaultTag=-
package entity

type StructConfigBuilder interface {
	SetDocText(docText string) StructConfigBuilder
	SetDefineFilename(defineFilename string) StructConfigBuilder
	Build() *StructConfig
}

// structConfigBuilderImpl is an instance for generating an instance of StructConfig.
type structConfigBuilderImpl struct {
	__sc *StructConfig
}

// NewStructConfigBuilder creates an StructConfigBuilder instance.
func NewStructConfigBuilder(
	name string,
	structSupports StructSupports,
	mutexFieldName string,
	enableMarshalJSON bool,
	fields []FieldConfig,
) StructConfigBuilder {
	__sc := &StructConfig{}

	__sc.name = name
	__sc.structSupports = structSupports
	__sc.mutexFieldName = mutexFieldName
	__sc.enableMarshalJSON = enableMarshalJSON
	__sc.fields = fields

	return &structConfigBuilderImpl{__sc: __sc}
}

func (__scb *structConfigBuilderImpl) SetDocText(docText string) StructConfigBuilder {
	if __scb == nil {
		panic("structConfigBuilderImpl is nil")
	} else if __scb.__sc != nil {
		__scb.__sc.docText = docText
		return __scb
	}

	panic("StructConfig has been already purged")
}

func (__scb *structConfigBuilderImpl) SetDefineFilename(defineFilename string) StructConfigBuilder {
	if __scb == nil {
		panic("structConfigBuilderImpl is nil")
	} else if __scb.__sc != nil {
		__scb.__sc.defineFilename = defineFilename
		return __scb
	}

	panic("StructConfig has been already purged")
}

// Build purges StructConfig instance from structConfigBuilderImpl.
//
// If calls other method in structConfigBuilderImpl after Purge called, it will be panic.
func (__scb *structConfigBuilderImpl) Build() *StructConfig {
	if __scb == nil {
		panic("structConfigBuilderImpl is nil")
	} else if __scb.__sc != nil {
		__sc := __scb.__sc
		__scb.__sc = nil

		return __sc
	}

	panic("StructConfig has been already purged")
}

func (__sc *StructConfig) Name() string {
	if __sc != nil {
		return __sc.name
	}

	panic("StructConfig is nil")
}

func (__sc *StructConfig) DocText() string {
	if __sc != nil {
		return __sc.docText
	}

	panic("StructConfig is nil")
}

func (__sc *StructConfig) DefineFilename() string {
	if __sc != nil {
		return __sc.defineFilename
	}

	panic("StructConfig is nil")
}

func (__sc *StructConfig) MutexFieldName() string {
	if __sc != nil {
		return __sc.mutexFieldName
	}

	panic("StructConfig is nil")
}

func (__sc *StructConfig) EnableMarshalJson() bool {
	if __sc != nil {
		return __sc.enableMarshalJSON
	}

	panic("StructConfig is nil")
}

func (__sc *StructConfig) Fields() []FieldConfig {
	if __sc != nil {
		return __sc.fields
	}

	panic("StructConfig is nil")
}

func (__sc *StructConfig) StructSupportsPtr() *StructSupports {
	if __sc != nil {
		return &__sc.structSupports
	}

	panic("StructConfig is nil")
}

func (__sc *StructConfig) SetDocText(docText string) {
	if __sc != nil {
		__sc.docText = docText
	}
}

func (__sc *StructConfig) SetDefineFilename(defineFilename string) {
	if __sc != nil {
		__sc.defineFilename = defineFilename
	}
}
