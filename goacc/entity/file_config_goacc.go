// Code generated by github.com/kasaikou/goacc, DO NOT EDIT.
// defaultTag=-
package entity

type FileConfigBuilder interface {
	Build() *FileConfig
}

// fileConfigBuilderImpl is an instance for generating an instance of FileConfig.
type fileConfigBuilderImpl struct {
	__fc *FileConfig
}

// NewFileConfigBuilder creates an FileConfigBuilder instance.
func NewFileConfigBuilder(
	filename string,
	packageName string,
	imports []ImportConfig,
	structs []StructConfig,
) FileConfigBuilder {
	__fc := &FileConfig{}

	__fc.filename = filename
	__fc.packageName = packageName
	__fc.imports = imports
	__fc.structs = structs

	return &fileConfigBuilderImpl{__fc: __fc}
}

// Build purges FileConfig instance from fileConfigBuilderImpl.
//
// If calls other method in fileConfigBuilderImpl after Purge called, it will be panic.
func (__fcb *fileConfigBuilderImpl) Build() *FileConfig {
	if __fcb == nil {
		panic("fileConfigBuilderImpl is nil")
	} else if __fcb.__fc != nil {
		__fc := __fcb.__fc
		__fcb.__fc = nil

		return __fc
	}

	panic("FileConfig has been already purged")
}

// Absolute path of Go file.
func (__fc *FileConfig) Filename() string {
	if __fc != nil {
		return __fc.filename
	}

	panic("FileConfig is nil")
}

// Package name.
func (__fc *FileConfig) PackageName() string {
	if __fc != nil {
		return __fc.packageName
	}

	panic("FileConfig is nil")
}

// Configuration of file defining Structs.
func (__fc *FileConfig) Structs() []StructConfig {
	if __fc != nil {
		return __fc.structs
	}

	panic("FileConfig is nil")
}
